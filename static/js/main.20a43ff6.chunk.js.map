{"version":3,"sources":["components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter.js","components/App.js","index.js"],"names":["Container","children","className","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","onSubmit","this","type","onChange","placeholder","required","Component","defaultProps","ContactListItem","onRemove","onClick","ContactList","contacts","onRemoveTask","map","id","key","Filter","onChangeFilter","App","filter","changeFilter","getVisibleContacts","toLowerCase","includes","addContact","data","newContact","uuidv4","newContactUnique","find","prevState","window","alert","checkExistName","text","console","log","removeTask","contactId","persistedNumber","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20a43ff6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Container.css\";\r\n\r\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ContactForm.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value  } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"form-label\">\r\n          Name\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Annie Copeland\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className=\"form-label\">\r\n          Number\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"227-91-26\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className=\"form-button\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nContactForm.defaultProps = {\r\n  name: \"\",\r\n  number: '',\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => {\r\n  return (\r\n    <li className=\"contact-item\">\r\n      <p className=\"contact-name\">{name}:</p>\r\n      <span className=\"contact-number\">{number}</span>\r\n      <button\r\n        type=\"button\"\r\n        className=\"contact-button\"\r\n        onClick={onRemove}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nContactListItem.defaultProps = {\r\n  name: \"\",\r\n  number: '',\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport \"./ContactList.css\";\r\n\r\nconst ContactList = ({contacts, onRemoveTask}) => {\r\n  return (\r\n    <div className=\"contact-wrapper\">\r\n      <ul className=\"contact-list\">\r\n        {contacts.map(({id, name, number}) => (\r\n          <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onRemove={()=> onRemoveTask(id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  props: PropTypes.exact({\r\n    contacts: PropTypes.arrayOf(PropTypes.string),\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nContactList.defaultProps = {\r\n  id: \"\",\r\n  name: \"\",\r\n  number: '',\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div className=\"filter-wrapper\">\r\n      <label className=\"filter-label\">\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          className=\"filter-input\"\r\n          value={value}\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nFilter.defaultProps = {\r\n  value: \"\",\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Container from \"./Container\";\nimport ContactForm from \"./ContactForm\";\nimport ContactList from \"./ContactList\";\nimport Filter from \"./Filter\";\n\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    filter: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  static defaultProps = {\n    contacts: [{ id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" }],\n    filter: \"\",\n    name: \"Annie Copeland\",\n    number: \"227-91-26\",\n  };\n\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  componentDidMount() {\n    const persistedNumber = localStorage.getItem(\"number\");\n\n    if(persistedNumber){\n      this.setState({\n        contacts: JSON.parse(persistedNumber)\n      })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"number\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(({name}) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  addContact = (data) => {\n    let newContact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n\n    const isNewContactUnique = () => {\n      const { contacts } = this.state;\n      return contacts.find(({name}) => name === newContact.name);\n    };\n\n    let newContactUnique = isNewContactUnique();\n\n    this.setState((prevState) => {\n      return !newContactUnique\n        ? { contacts: [...prevState.contacts, newContact] }\n        : window.alert(`${newContact.name} is already in contacts.`);\n    });\n  };\n\n  checkExistName = (text) => {\n    console.log(text);\n  };\n\n  removeTask = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(\n          ({id}) => id !== contactId\n        ),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <h1 className=\"container-title\">Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n\n        <h2 className=\"container-title\">Contacts</h2>\n        {visibleContacts.length >= 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveTask={this.removeTask}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './base.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}